1.任务：在只有水平方向上移动的ptz摄像头所拍摄的画面中提取运动物体
2.方案：先扫描一遍生成全景图作为背景，然后对每个当前帧进行配准找到其对应的子背景（运动补偿），最后使用改进的ViBe方法在子背景中进行前景的判断
3.当前的功能：实现了对于两个视频例子continuousPan和intermittentPan的前景提取。首先程序对视频进行全景图的提取，并输出全景图，然后计算全景图的特征并储存，然后完成ViBe算法的初始化，接下来读入视频并逐帧进行图像配准，与子背景比较得到前景显示出来
4.程序设计：程序共3个类，其中ViBe_BGS类封装了背景提取的操作，KeyPointMatch类封装了图像配准的操作，VideoProcessor类通过对前面来两个类的调用，封装了包括读取视频，初始化，创建窗口，设置延迟和循环处理每一帧等功能，是总体的框架。在testNew.cpp中通过对VideoProcessor类的使用来完成处理。
5.尚需改进：

1.当前景占屏幕的比例很大时，前景和全景图中没有足够多的匹配的特征点，这样导致单应性矩阵H求解失败，程序会抛出异常。解决办法可以是：调节特征提取的海森阈值，或者更改劳氏判据增加good_matches的数量。
2.全景图的生成需要人工预先判断读取视频的哪几帧。解决办法是：日后可以控制PTZ摄像头在初始化时从端到另一端以一定的速度扫描一遍，根据其扫描速度和位置可以预先编程设定读取的帧位置。
3.为了不必每次重新对巨幅的全景图进行特征提取，当前程序没有更新全景图，这可能会导致配准不精确。解决办法是：如果要更新全景图，可以使用ViBe中存储的背景矩阵，对每个像素的20个值求平均作为对应位置的像素值实时对全景图更新。
4.在应用ViBe时，程序中首先尝试了点对点的比较，但效果不好，于是尝试了当前帧每一点对子背景中一个3*3的9像素点区域的比较，采用邻域投票的方法，效果得到提升。进一步又尝试了点对可以改变半径的圆形区域的比较，但程序的执行慢了许多，效果略微提升，尚需进一步研究。
5.程序实现了surf特征和orb特征的选择，surf特征处理效果好，orb特征处理速度快
6.对ViBe中背景集的更新仅仅是当前帧的点去更新四舍五入之后位置的子背景点，改进：应该对区域进行更新，还需进一步研究
